CSCI,1000,1,Computer Science as a Field of Work and Study,"Introduces curriculum, learning techniques, time management and career opportunities in Computer Science. Includes presentations from alumni and others with relevant educational and professional experience.",Restricted to students with 0-26 credits (Freshmen) Computer Science (CSEN-BSCS or CSEN-BA) or Engineering Open Option (XXEN) majors only.
CSCI,1200,3,Introduction to Computational Thinking,"Teaches computational thinking and techniques for writing computer programs using the Python programming language. Intended for students who realize that computational skills are beneficial to all fields of study, but who have little or no experience in programming or are not Computer Science majors. Students will be expected to create computer programs to solve problems in a range of disciplines. Does not count as Computer Science credit for the Computer Science BA, BS, or minor.",NONE
CSCI,1300,4,Computer Science 1: Starting Computing,Teaches techniques for writing computer programs in higher level programming languages to solve problems of interest in a range of application domains. Appropriate for students with little to no experience in computing or programming.,APPM 1235 or APPM 1340 or APPM 1345 or APPM 1350 or MATH 1150 or MATH 1300 or MATH 1310 (all minimum grade C-).
CSCI,2270,4,Computer Science 2: Data Structures,"Studies data abstractions (e.g., stacks, queues, lists, trees, graphs, heaps, hash tables, priority queues) and their representation techniques (e.g., linking, arrays). Introduces concepts used in algorithm design and analysis including criteria for selecting data structures to fit their applications. Knowledge OF C++ is highly recommended.",(CSCI 1300 or CSCI 1320 or ECEN 1310 minimum grade C-) or (ASEN 1320 minimum grade B-)) and prerequisite or corequisite course of (MATH 1300 or MATH 1310 or APPM 1345 or APPM 1350 minimum grade C-).
CSCI,2275,4,Programming and Data Structures,"Combines the content in CSCI 1300 and CSCI 2270 and is intended for students with experience with at least one object oriented programming language. Assumes knowledge of programming constructs- data types, conditionals, loops and classes. Students must pass a programming competency exam administered by the computer science department to take this class. The course includes an expedited instruction in the C++ programming language and then primarily focuses on the content in CSCI 2270: data abstractions (e.g., stacks, queues, lists, trees, graphs, heaps, hash tables, priority queues) and their representation techniques (e.g., linking, arrays). Introduces concepts used in algorithm design and analysis including criteria for selecting data structures to fit their applications.",APPM 1235 or APPM 1340 or APPM 1345 or APPM 1350 or MATH 1150 or MATH 1300 or MATH 1310 
CSCI,2400,4,Computer Systems,"Covers how programs are represented and executed by modern computers, including low-level machine representations of programs and data, an understanding of how computer components and the memory hierarchy influence performance.",CSCI 2270 or CSCI 2275 or ECEN 2370
CSCI,2750,3,"Computing, Ethics and Society","Satisfies the ethics requirement for computer science BA and BS majors. This course is intended to provide students with perspectives which help them deal with ethical and societal implications in their careers as computing professionals. Examines ethical ramifications of current and future computing systems and technologies and reflects upon the broad implications of computing upon our society. Student work consists of reading, participation in class discussions and presentations, essays, and a final project. Students from outside computer science also are welcome. Necessary background is basic familiarity with computing. Does not count as Computer Science elective credit for the Computer Science BA, BS, or minor.",NONE
CSCI,2820,3,Linear Algebra with Computer Science Applications,"Introduces the fundamentals of linear algebra in the context of computer science applications.  Includes vector spaces, matrices, linear systems, and eigenvalues.  Includes the basics of floating point computation and numerical linear algebra.",(CSCI 2270 or CSCI 2275) and (APPM 1360 or MATH 2300) 
CSCI,2824,3,Discrete Structures,"Covers foundational materials for computer science that is often assumed in advanced courses. Topics include set theory, Boolean algebra, functions and relations, graphs, propositional and predicate calculus, proofs, mathematical induction, recurrence relations, combinatorics, discrete probability. Focuses on examples based on diverse applications of computer science.",(ASEN 1320 or CSCI 1200 or CSCI 1300 or CSCI 1320 or CSCI 2275 or ECEN 1030 or ECEN 1310) and (APPM 1345 or APPM 1350 or MATH 1300 or MATH 1310) 
CSCI,2834,1,Discrete Structures Workgroup,"Provides additional problem-solving practice and guidance for students enrolled in CSCI 2824. Students work in a collaborative environment to further develop their problem-solving skills with the assistance of facilitators. Does not count as Computer Science credit for the Computer Science BA, BS, or minor.",CSCI 2824
CSCI,2897,3,Calculating Biological Quantities,"Master practical mathematical techniques for representing and analyzing biological quantities of different kinds. Develop mathematical intuition about biological calculations. Learn to model and solve simple feedback processes. Learn to model and solve simple accumulation processes. Learn to model and decompose simple vector spaces. Learn standard approximation and optimization strategies. Adapt and combine methods to solve real-world problems. Background in biology not required. This course is intended for students who are interested in Computational Biology, but will not take Differential Equations (APPM 2360/MATH 3430) as part of their degree plan. Does not count as Computer Science credit for Computer Science majors or minor.",APPM 1345 or APPM 1350 or MATH 1300 or MATH 1310
CSCI,3002,4,Fundamentals of Human Computer Interaction,"Introduces the practice and research of human-computer interaction, including its history, theories, the techniques of user-centered design, and the development of interactive technologies. Covers computing in society at large with respect to domains such as health, education, assistive technology, ethics, environment, and more.","CSCI 2270 or CSCI 2275. Restricted to students with 27-180 credits (Sophomores, Juniors or Seniors)."
CSCI,3010,3,Intensive Programming Workshop,"Explores concepts and techniques for design and construction of larger, reliable, and maintainable software systems in the context of object-oriented programming. Covers various topics including: object-oriented programming paradigms, scope, inheritance, program structure and design, practical use of version control, working with established code bases, and building graphical user interfaces. Emphasizes coding individually and in pairs and includes in class lab work, smaller coding assignments, and multiple weeks-long projects. Not intended for students in their final year of the Computer Science BA or BS degree. Formerly offered as a special topics course.",(CSCI 2270 or CSCI 2275) and a prerequisite or co-requisite course of CSCI 3308
CSCI,3022,3,Introduction to Data Science with Probability and Statistics,"Introduces students to the tools methods and theory behind extracting insights from data. Covers algorithms of cleaning and munging data, probability theory and common distributions, statistical simulation, drawing inferences from data, and basic statistical modeling.",(CSCI 2270 or CSCI 2275) and (APPM 1360 or MATH 2300) and (CSCI 2824 or ECEN 2703 or APPM 3170 or MATH 2001) 
CSCI,3090,3,Introduction to Quantum Computing,"Covers the basics of quantum computation, including the basics of quantum information; axioms of quantum mechanics; quantum circuits and universality; the relationship between quantum and classical complexity classes; simple quantum algorithms such as the quantum Fourier transform; Shor factoring algorithm; Grover search algorithm; physical implementation of quantum computation; error correction and fault tolerance.",APPM 2360 or APPM 3310 or CSCI 2820 or MATH 2130 or MATH 2135
CSCI,3100,1,Software and Society,"Provides students with an understanding of the professional, ethical, legal and social issues and responsibilities of software developers, as well as providing them with the ability to analyze the local and global impacts of computing on individuals, organizations and society.  Required for, and restricted to, Computer Science majors completing a Senior Thesis. Department consent required.",NONE
CSCI,3104,4,Algorithms,"Covers the fundamentals of algorithms and various algorithmic strategies, including time and space complexity, sorting algorithms, recurrence relations, divide and conquer algorithms, greedy algorithms, dynamic programming, linear programming, graph algorithms, problems in P and NP, and approximation algorithms.",(CSCI 2270 or CSCI 2275) and (APPM 1360 or MATH 2300) and (CSCI 2824 or ECEN 2703 or APPM 3170 or MATH 2001)
CSCI,3112,1,Professional Development in Computer Science,"Supports students in developing professional skills and practices in computing, including: preparing for technical and behavioral interviews, professional networking, mastering new technologies not addressed in the curriculum, presenting work, the role of graduate study, and exploring career and research directions.",CSCI 2270 or CSCI 2275
CSCI,3150,3,Universal Design for Digital Media,"Focusing on the concepts of universal design and Web Standards, this course will address issues that occur at the nexus of web standards, Universal Design and the needs of persons with disabilities. Students will gain the expertise and skills to create media and web sites which are accessible, usable and effective for all users and device platforms.",CSCI 1300
CSCI,3155,4,Principles of Programming Languages,"Studies principles governing the design and analysis of programming languages and their underlying execution models. Explores values, scoping, recursion, higher-order functions, type systems, control structures, and objects. Introduces formal semantics as a framework for understanding programming features. Introduces advanced programming concepts such as functional programming, higher-order functions, immutable values and structures, inductive types, functors, continuation-passing; and object-oriented programming using inheritance, generics and covariance/contravariance in a functional programming language such as Scala.",(CSCI 2270 or CSCI 2275) and (CSCI 2400 or ECEN 2360 or ECEN 3350) and (CSCI 2824 or ECEN 2703 or APPM 3170 or MATH 2001) 
CSCI,3202,3,Introduction to Artificial Intelligence,"Surveys artificial intelligence techniques of search, knowledge representation and reasoning, probabilistic inference, machine learning, and natural language. Knowledge of Python strongly recommended.",(CSCI 2270 or CSCI 2275)  and (APPM 3170 or CSCI 2824 or ECEN 2703 or MATH 2001)  and (APPM 3570 or CHEN 3010 or CSCI 3022 or CVEN 3227 or ECEN 3810 or ECON 3818 or MATH 3510 or MATH 4510 or STAT 3100 or STAT 4000) 
CSCI,3287,3,Design and Analysis of Database Systems,"Introduces the fundamental concepts of database requirements analysis, database design, and database implementation with emphasis on the relational model and the SQL programming language. Introduces the concepts of Big Data and NoSQL systems.",CSCI 2270 or CSCI 2275
CSCI,3302,3,Introduction to Robotics,"Introduces students to fundamental concepts in autonomous robotics: mechanisms, locomotion, kinematics, control, perception and planning. Consists of lectures and lab sessions that are geared toward developing a complete navigation stack on a miniature mobile robotic platform.",(CSCI 2270 or CSCI 2275) and (APPM 3170 or CSCI 2824 or ECEN 2703 or MATH 2001) and (APPM 2360 or APPM 3310 or CSCI 2820 or MATH 2130 or MATH 2135)
CSCI,3308,3,Software Development Methods and Tools,"Covers tools and techniques for successful software development with a strong focus on best practices used in industry. Students work in small teams to complete a semester-long application development project. Students learn front-end design and construction using HTML & CSS, back-end database design and construction, and full-stack integration. Students gain exposure to agile methodologies, web services, distributed version control, requirements definition, automated integration testing, and cloud-based application deployment.",CSCI 2270 or CSCI 2275 
CSCI,3352,3,Biological Networks,"This course examines the computational representation and analysis of biological phenomena through the structure and dynamics of networks, from molecules to species. Attention focuses on algorithms for clustering network structures, predicting missing information, modeling flows, regulation, and spreading-process dynamics, examining the evolution of network structure, and developing intuition for how network structure and dynamics relate to biological phenomena.",(APPM3650 or CSCI2270 or CSCI 2275 or INFO2201 or PHYS2600) and (APPM1345 or APPM 1350 or MATH1300 or MATH 1310)  and (APPM3570 or CHEN3010 or CSCI3022 or CVEN 3227 or EBIO 4410 or ECEN 3810 or ECON 3818 or IPHY 3280 or MATH 3510 or MATH 4510 or MATH 4520 or MCDB 3450 or MCEN 3047 or PSYC 2111 or STAT 2600 or STAT 3100 or STAT 4000 or STAT 4520)
CSCI,3403,4,Introduction to CyberSecurity for a Converged World,"Introduces core concepts in cybersecurity including confidentiality, integrity, authentication, risk management, and adversarial thinking. The concepts will be applied to both traditional information technology (IT) systems and cyber physical systems (CPS). At the conclusion of the course students should have a solid foundation in cybersecurity and hands-on experience.",CSCI 2400 or ECEN 2360 or ECEN 3350
CSCI,3434,3,Theory of Computation,"Introduces the foundations of formal language theory, computability, and complexity. Shows relationship between automata and various classes of languages. Addresses the issue of which problems can be solved by computational means, and studies complexity of solutions.",CSCI 3104 
CSCI,3593,3,Computer Organization,"Studies computer design at the microarchitecture level. Discusses instruction set architecture design, arithmetic and logic unit design, control logic, memory design and caches, simple pipelining, I/O and peripheral devices. Briefly covers aspects of modern computer architecture, such as multicore processors and hardware security.",ECEN 2360 or  ECEN 3350 or CSCI 2400
CSCI,3656,3,Numerical Computation,"Covers development, computer implementation, and analysis of numerical methods for applied mathematical problems. Explores topics such as floating point arithmetic, numerical solution of linear systems of equations, root finding, numerical interpolation, differentiation, and integration.",(ASEN 1320 or CSCI 1300 or CSCI 1320 or CSCI 2275 or ECEN 1310) and (APPM 1360 or MATH 2300) and (APPM 2360 or APPM 3310 or CSCI 2820 or MATH 2130 or MATH 2135) 
CSCI,3702,3,Cognitive Science,"Introduces cognitive science, drawing from psychology, philosophy, artificial intelligence, neuroscience, and linguistics. Studies the linguistic relativity hypothesis, consciousness, categorization, linguistic rules, the mind-body problem, nature versus nurture, conceptual structure and metaphor, logic/problem solving and judgment. Emphasizes the nature, implications and limitations of the computational model of mind.",Two of the following CSCI 1300 or CSCI 2275 or LING 2000 or PHIL 2440 or PSYC 2145.
CSCI,3753,4,Design and Analysis of Operating Systems,"Analyzes the software that extends hardware to provide a computing environment, including the role of linkers, file systems, resource sharing, security and networking. Studies the history of operating system organization and design and their influence on security, functionality and reliability.",(CSCI 2270 or CSCI 2275) and (CSCI 2400 or ECEN 2360 or ECEN 3350)
CSCI,3832,3,Natural Language Processing,"Explores the theoretical and practical issues that arise in getting computers to perform useful and interesting tasks with human languages. Topics include information extraction, dialog systems and machine translation. Focus is on the use of language data and machine learning algorithms to build robust systems.",(CSCI 2270 or CSCI 2275) and (CSCI 2824 or MATH 2001 or ECEN 2703 or APPM 3170)
CSCI,4022,3,Advanced Data Science,"Introduces students to advanced tools, methods, and theory for extracting insights from data. Covers computational tools for storing and working with large data sets and computational techniques for common big data scenarios like graph data, recommender systems, and dimensionality reduction. Emphasizes both the efficient implementation of algorithms as well as the mathematical foundations behind techniques.",(APPM 3310 or CSCI 2820 or MATH 2130 or MATH 2135)  and (CSCI 3022 or APPM 3570 or CHEN 3010 or CVEN 3227 or MATH 3510 or MATH 4510 or ECEN 3810 or ECON 3818 or STAT 3100 or STAT 4000 or 4520)  and CSCI 3104 
CSCI,4113,3,Linux System Administration,"Introduces Linux Unix system administration and related topics. Includes hardware and software installation, storage management, configuration of user accounts and system services, development of automation and monitoring tools, and the provisioning of common network services. This laboratory-focused course will provide significant exposure to the network security concerns of Internet connected hosts. Students will build a network of Linux servers from the ground up using provided computing resources and must maintain and secure these servers themselves.",CSCI 3753 
CSCI,4114,3,Practical Algorithmic Complexity,"When coming across an algorithmic problem, how do we think about how hard it is? Beyond just how much time or memory it takes, computational complexity offers a plethora of concepts for understanding this fundamental question. This leads to the appropriate choice of algorithm for the job, the development of new algorithms, and understanding the role of algorithmic complexity in natural settings such as biology and physics.",CSCI 3104
CSCI,4118,3,Software Engineering for Scientists,"Learn the core principles of software engineering to develop scientific software that is robust and reproducible. This class targets quantitative scientists in any discipline who have programming skills (any language) and want to use software to further their research. We cover version control, testing, benchmarking, data structures, algorithms, and pipelines. Instructor approval is required for CS majors and CS minors.","ASEN 1320 or CSCI 1200 or CSCI 1300 or CSCI 2275 or ECEN 1310 or INFO 1201 and knowledge of a programming language, preferably Python."
CSCI,4122,3,Information Visualization,"Studies interactive visualization techniques that help people analyze data. This course introduces design, development, and validation approaches for interactive visualizations with applications in various domains, including the analysis of text collections, software visualization, network analytics, and the biomedical sciences. It covers underlying principles, provides an overview of existing techniques, and teaches the background necessary to design innovative visualizations.",(CSCI 2270 or CSCI 2275) and (CSCI 2824 or ECEN 2703 or APPM 3170)
CSCI,4133,3,Fundamentals of Computer Security,"Practice thinking like an attacker by exploring several modern computer security attacks and defenses through hands-on programming projects. Topics include applied cryptography (encryption, authentication), web security (XSS, CSRF, SQL Injection), network security (TLS, MITM attacks), application security (shell injection, buffer overflows), and other current events and trends (government surveillance, botnets, cryptocurrencies).",(CSCI 2270 or CSCI 2275) and (CSCI 2400 or ECEN 2360 or ECEN 3350) (all minimum grade C-). Recommended: Corequisite CSCI 3593.
CSCI,4200,3,Introduction to Wireless Systems,"Overviews the distinctive characteristics of the wireless communications medium. Topics covered include: Analog signals, Antennas and Propagation, Digital Signals, Sampling, Quadrature Signals, Digital Modulation, SNR and SINR Concepts, Channel Models, Channel Statistics, and Link Budgets. The course includes an introduction to MIMO and beam-forming as implemented in modern communication systems. Software Defined Radio (SDR) is introduced to facilitate student hands-on learning of radio operation. Recommended: Familiarity with basic programming, statistics, and computer networking concepts. Formerly CYBR 4200.",(CSCI 2400 or ECEN 2360 or ECEN 3350) and (APPM 3570 or CHEN 3010 or CSCI 3022 or CVEN 3227 or ECEN 3810 or ECON 3818 or MATH 3510 or MATH 4510 or MCEN 3047 or STAT 3100 or STAT 4000 or STAT 4520) and PHYS 1120
CSCI,4229,3,Computer Graphics,"Studies design, analysis and implementation of computer graphics techniques. Topics include interactive techniques, 3D viewing and models, clipping, transformations, projection, removal of hidden surfaces, lighting, textures and shadows. Knowledge of basic linear algebra is required.",CSCI 2270 or CSCI 2275
CSCI,4239,3,Advanced Computer Graphics,"Studies design, analysis and implementation of advanced computer graphics techniques. Topics include shaders, using the GPU for high performance computing, graphics programming on embedded devices such as mobile phones; advanced graphics techniques such as ray tracing.",CSCI 4229
CSCI,4240,3,Introduction to Blockchain,"Examines an emerging technology known as blockchain. Blockchain refers to the distributed and decentralized database technology behind popular cryptocurrencies such as Bitcoin and Ethereum. However, it can be used to record and transfer any digital asset, not just currency. This course explores the fundamentals of blockchain technology and its application from three key perspectives: policy and governance, technology, and application. Students gain an understanding of key concepts and how to apply them in the industry.",(CSCI 2270 or CSCI 2275) and (CSCI 2824 or ECEN 2703 or APPM 3170 or MATH 2001)
CSCI,4250,3,History of Computing,"Explores the multifaceted histories of computing as punctuated by ""great works"" of computer science within the context of historical and social changes influencing and influenced by computing. We will consider people, institutions, and innovations starting with mechanical calculation and mathematical frameworks such as by Lovelace, Pascal, and Turing; early computers such as ABC and ENIAC; the pivotal role of military funding; the founding and development of fields transforming our lives such as artificial intelligence and the internet; and ways other fields, from engineering to cognitive science, interweave in the evolution of computing. Does not count as CS credit for the Computer Science BA, BS or minor.",Restricted to students with 57-180 credits (Juniors or Seniors).
CSCI,4253,3,"Datacenter Scale Computing - Methods, Systems and Techniques","Covers the primary problem solving strategies, methods and tools needed for data-intensive programs using large collections of computers typically called ""warehouse scale"" or ""data-center scale"" computers. Examines methods and algorithms for processing data-intensive applications, methods for deploying and managing large collections of computers in an on-demand infrastructure and issues of large-scale computer system design.",CSCI 3753
CSCI,4273,3,Network Systems,"Focuses on design and implementation of network programs and systems, including topics in network protocols, file transfer, client-server computing, remote procedure call and other contemporary network system design and programming techniques. Familiarity with C and Unix or Linux is required.",CSCI 3753
CSCI,4302,3,Advanced Robotics,"An intensive exploration of major challenges in robotics, providing a hands-on review of current research topics in the context of a ""robotics grand challenge"" problem. Topics include online planning and control, state estimation, simultaneous localization and mapping, and operating under partial observability.",CSCI 3302
CSCI,4303,1,Cybersecurity Club Companion Course,"Gives students hands-on experience applying practical security skills and adversarial thinking to real-world problems. Students will work in small teams on internal challenges, lab development, open source contributions, and will represent the university in larger teams for external challenges at the national and global level, such as those hosted by Collegiate Cyber Defense Competition (CCDC), Wicked6, DOE CyberForce, etc. Students will be expected to participate in both internal and external challenges, attend meetings, and present short presentations to the group when appropriate. Previously offered as a special topics course.",CSCI 3403
CSCI,4308,4,Software Engineering Project 1,"Senior capstone course in which students design, implement, document and test software systems for use in industry, non-profits, government and research institutions. Also offers extensive experience in oral and written communication throughout the development process. Department consent required. Department-enforced prerequisites differ for BS and BA degree. Contact academic advisor for details. Senior Capstone courses are optional for BA students. BA students interested in taking this course should contact their advisor early in their major.","Restricted to students with 87-180 credits (Senior, Fifth Year Senior)"
CSCI,4313,3,Concurrent Programming,"Introduces the theory and practice of multicore programming. The first part of the course presents foundations of concurrent programming: mutual exclusion, wait-free and lock-free synchronization, spin locks, monitors, memory consistency models. The second part presents a sequence of concurrent data structures and techniques used in their implementations (coarse-grained, fine-grained, optimistic and lock-free synchronization).",CSCI 2400
CSCI,4314,3,Dynamic Models in Biology,"Surveys computational and mathematical modeling to illuminate biological processes. Students work together to learn to build and analyze models using a variety of numerical tools, tackle meaningful biological problems, and communicate effectively across disciplines. Specific topics: Langevin dynamics of protein folding, agent-based models, finite difference models of organismal growth, stochastic and deterministic cellular automata game of life, models of behavior.",APPM 3650 or ASTR 2600 or CSCI 2270 or CSCI 2275 or INFO 2201 or PHYS 2600
CSCI,4318,4,Software Engineering Project 2,Second semester of a senior capstone course in computer science. Students must take this course and CSCI 4308 or 4328 contiguously as the project spans the entire academic year.,CSCI 4308 or CSCI 4328
CSCI,4328,4,Software Project Management and Mentoring,"Review software project management and discuss the latest approaches, methodologies and standards of software development. Learn to develop software quality, documentation, testing and prototype goals. Study project risk management and cost estimation approaches. Students will mentor other Senior Software Project Teams. Intended for students with professional software development experience. Department consent required, see Senior Project Director for permission.","Restricted to students with 87-180 credits (Senior, Fifth Year Senior)"
CSCI,4338,2,Software Project Management,"Review software project management and discuss the latest approaches, methodologies and standards of software development. Learn to develop software quality, documentation, testing, and prototype goals. Study project risk management and cost estimation approaches. Intended for double majors doing interdisciplinary projects in other departments. Department consent required, see Senior Project Director for permission. Not intended for students who will be enrolling in CSCI 4368.","Restricted to students with 87-180 credits (Senior, Fifth Year Senior)"
CSCI,4348,4,Startup Essentials: Entrepreneurial Projects in Computing,"Provide students with the tools to be successful technical co-founders of their own startups. Explores the initial stages of founding a startup, including team formation, idea validation, pivoting and pitching, while employing an iterative methodology. Student teams will develop a minimum viable product, pitch their final startup concept, and be evaluated on product/market fit. Department consent required. Department-enforced prerequisites differ for BS and BA degree. Contact academic advisor for details. Senior Capstone courses are optional for BA students. BA students interested in taking this course should contact their advisor(s) early in their major. Students must take this course and CSCI 4358 contiguously as the project spans the entire academic year.","Restricted to students with 87-180 credits (Senior, Fifth Year Senior)"
CSCI,4358,4,Entrepreneurial Projects II,"Follows CSCI 4348. In the second semester of this entrepreneurial project capstone, student teams will seek to find market traction for a high-fidelity Minimum Viable Product (MVP), software and/or hardware, that they will develop as part of their startup project. Teams will further learn to incorporate principles of marketing, business finance and legal issues into the business model for their startup concept. Students must take this course and CSCI 4348 contiguously as the project spans the entire academic year.",CSCI 4348
CSCI,4368,4,Multidisciplinary Design Project 1,"Design, develop, test, and deploy software that is integrated into a mechanical system. Participate as a member of a multi-disciplinary team that could include students from computer science, mechanical, and electrical disciplines. Develop project management and communication skills as they pertain to a multi-disciplinary team. Support the project team through self-directed study. First semester of a senior capstone course. Students must take this course and CSCI 4378 contiguously as the project spans the entire academic year. Department-enforced prerequisites differ for BS and BA degree. Contact academic advisor for details. Senior Capstone courses are optional for BA students. BA students interested in taking this course should contact their advisor(s) early in their major.","Restricted to students with 87-180 credits (Senior, Fifth Year Senior)"
CSCI,4378,4,Multidisciplinary Design Project 2,"Design, develop, test, and deploy software that is integrated into a mechanical system. Participate as a member of a multi-disciplinary team that could include students from computer science, mechanical, and electrical disciplines. Develop project management and communication skills as they pertain to a multi-disciplinary team. Support the project team through self-directed study. Second semester of a senior capstone course. Students must take this course and CSCI 4368 contiguously as the project spans the entire academic year.",CSCI 4368
CSCI,4413,3,Computer Security and Ethical Hacking,"Teaches basic exploit design and development through hands-on experimentation and testing. Uses a controlled environment to give students a ""playground"" in which to test penetration skills that are normally not allowed on live networks.",CSCI 4273
CSCI,4444,3,Algorithms and Data Structures for Analyzing DNA,"Covers the basic concepts of genetics and genomics and how DNA analysis problems translate into computational problems. Covers core algorithms such as genome assembly, string matching, string indexing, and string set comparisons. Covers core data structures such as suffix trees and tries, FM index, and Bloom Filters.",(APPM 3650 or ASTR 2600 or CSCI 2270 or CSCI 2275 or INFO 2201 or PHYS 2600) and (APPM 1350 or MATH 1150 or MATH 1300 or MATH 1310)
CSCI,4446,3,Chaotic Dynamics,"Explores chaotic dynamics theoretically and through computer simulations. Covers the standard computational and analytical tools used in nonlinear dynamics and concludes with an overview of leading-edge chaos research. Topics include time and phase-space dynamics, surfaces of section, bifurcation diagrams, fractal dimension and Lyapunov exponents.",(ASEN 1320 or CSCI 1300 or CSCI 1320 or CSCI 2275 or ECEN 1310) and (APPM 2350 or MATH 2400) 
CSCI,4448,3,Object-Oriented Analysis and Design,"An applied analysis and design class that addresses the use of object-oriented techniques. Topics include domain modeling, use cases, architectural design and modeling notations. Students apply the techniques in analysis and design projects.",CSCI 3308
CSCI,4502,3,Data Mining,"Introduces basic data mining concepts and techniques for discovering interesting patterns hidden in large-scale data sets, focusing on issues relating to effectiveness and efficiency. Topics covered include data preprocessing, data warehouse, association, classification, clustering, and mining specific data types such as time-series, social networks, multimedia, and Web data.",CSCI 2270 or CSCI 2275
CSCI,4555,3,Compiler Construction,"Introduces the principles and techniques for compiling high-level programming languages to assembly code. Topics include parsing, instruction selection, register allocation, and compiling high-level features such as polymorphism, first-class functions, and objects. Students build a complete compiler for a simple language.",CSCI 3155 and (CSCI 2400 or or ECEN 2360 or ECEN 3350)
CSCI,4576,4,High-Performance Scientific Computing,"Introduces computing systems, software and methods used to solve large-scale problems in science and engineering. Students use high-performance workstations and a supercomputer.",APPM 4600 or APPM 4650 or CSCI 3656 or MATH 4650 or MCEN 3030.
CSCI,4616,3,Introduction to Virtual Reality,"Introduces students to the field of virtual reality (VR). Covers the historical development of virtual reality technologies and virtual reality as a research field, the mathematics of 3D coordinate systems, fundamental principles, algorithms, and design patterns in developing interactive virtual environments, the perceptual science behind mixed reality technologies, and libraries and tools for creating VR experiences.",CSCI 2270 or CSCI 2275
CSCI,4622,3,Machine Learning,"Introduces students to tools, methods, and theory to construct predictive and inferential models that learn from data. Focuses on supervised machine learning technique including practical and theoretical understanding of the most widely used algorithms (decision trees, support vector machines, ensemble methods, and neural networks). Emphasizes both efficient implementation of algorithms and understanding of mathematical foundations.",(CSCI 2270 or CSCI 2275)  and (APPM 3310 or CSCI 2820 or MATH 2130 or MATH 2135) and (CSCI 2824 or ECEN 2703 or APPM 3170 or MATH 2001)  and (APPM 3570 or CHEN 3010 or CSCI 3022 or CVEN 3227 or ECEN 3810 or ECON 3818 or MATH 3510 or MATH 4510 or MCEN 3047 or STAT 3100 or STAT 4000 or STAT 4520)
CSCI,4722,3,Computer Vision,"Explores algorithms that can extract information about the world from images or sequences of images. Topics covered include: imaging models and camera calibration, early vision (filters, edges, texture, stereo, optical flow), mid-level vision (segmentation, tracking), vision-based control and object recognition.",(APPM 2360 or APPM 3310 or CSCI 2820 or MATH 2130 or MATH 2135) and CSCI 3104 
CSCI,4753,3,Computer Performance Modeling,"Presents a broad range of system measurement and modeling techniques, emphasizing applications to computer systems. Covers topics including system measurement, workload characterization and analysis of data; design of experiments; queuing theory and queuing network models; and simulation.",(APPM 1360 or MATH 2300) and CSCI 3753
CSCI,4802,1,Data Science Team Companion Course,"Gives students hands-on experience applying data science techniques and machine learning algorithms to real-world problems. Students work in small teams on internal challenges, many of which will be sponsored by local companies and organizations and will represent the university in larger teams for external challenges at the national and global level, such as those hosted by Kaggle. Students will be expected to participate in both internal and external challenges, attend meetings and present short presentations to the group when appropriate.","(APPM 3310, CSCI 2820, MATH 2130, MATH 2135) OR (APPM 3570, CHEN 3010, CSCI 3022, CVEN 3227, ECEN 3810, ECON 3818, MATH 3510, MATH 4510, MCEN 3047, STAT 3100, STAT 4000, STAT 4520)"
CSCI,4809,3,Computer Animation,"Develops a firm understanding of the general principles of computer animation. Lectures cover the creation of models, materials, textures, surfaces, and lighting. Path and key frame animation, particle dynamics, and rendering are introduced. Students are assigned a number of animation tutorials to carry out.",NONE
CSCI,4849,3,"Input, Interaction, and Accessibility","Explores input and interaction techniques with an emphasis on universal design and alternative interfaces. Students explore traditional input methods such as keyboard and mouse input, and alternative techniques such as voice and eye gaze. Students conduct performance evaluations of existing techniques, and prototype new interaction methods. Students design technologies to support people with varying abilities and disabilities.",CSCI 3002
CSCI,4897,3,Computational and Mathematical Modeling of Infectious Diseases,"Explores the ways we model infectious diseases using math and computing, from the dynamic spread of infectious diseases between humans, to a pathogen's growth within the body. Learning goals include (i) gaining a mastery of both classic and modern infectious disease models (ii) learning about a variety of infectious diseases, and (iii) engaging with the ethics of infectious disease modeling. Requires beginner or advanced-beginner skill in Python or R.",(MATH 1300 or MATH 1310 or APPM 1345 or APPM 1350) and (APPM 3650 or ASTR 2600 or CSCI 2270 or CSCI 2275 or INFO 2201 or PHYS 2600) and (APPM 3570 or CHEN 3010 or CSCI 3022 or CVEN 3227 or EBIO 4410 or ECEN 3810 or ECON 3818 or IPHY 3280 or MATH 3510 or MATH 4510 or MATH 4520 or MCDB 3450 or MCEN 3047 or PSYC 2111 or STAT2600 or STAT 3100 or STAT 4000 or STAT 4520)